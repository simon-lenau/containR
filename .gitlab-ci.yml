variables:
  FROM_IMAGE: index.docker.io/rocker/r-ver:4.3.3

stages:
  - r-container-build

r-container-build:
  stage: r-container-build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  rules:
    - changes:
        paths:
          - dependencies/*
          - R/*
          - Dockerfile
          - .gitlab-ci.yml
          - containr_scripts/entrypoint
  script:
    # Set folders
    - cd "${CI_PROJECT_DIR}" && mkdir -p /kaniko/.docker;
    # Set Credentials
    - >-
      printf "{
        \"auths\": 
        {
        \"${CI_REGISTRY}\":
          { 
            \"auth\": 
              \"$(
              printf "%s:%s" \
                "${CI_REGISTRY_USER}" \
                "${CI_REGISTRY_PASSWORD}" | \
              base64 -w 0
              )\"
          },
          \"https://index.docker.io/v1/\":
          { 
            \"auth\": 
              \"$(
              printf "%s:%s" \
                "${DOCKERHUB_REGISTRY_USER}" \
                "${DOCKERHUB_REGISTRY_PASSWORD}" | \
              base64 -w 0
              )\"
          }
        }
      }" \
      > /kaniko/.docker/config.json;
    # Export package lists
    - >- 
      export ubuntu_packages=$(cat dependencies/Ubuntu 2>/dev/null || return 0);
      export r_packages=$(cat dependencies/R 2>/dev/null || return 0);
    # Determine image information
    - >-
      export image_name="$(echo ${FROM_IMAGE} | sed 's/.*\///' | sed 's/\:.*$//')";
      export image_vers="$(echo ${FROM_IMAGE} | sed 's/.*\///' | sed 's/^.*\:\(.*\)$/\1/')";
    # Build the container
    - >-
      /kaniko/executor
      --context "./"
      --dockerfile "./Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/${image_name}:latest"
      --destination "${CI_REGISTRY_IMAGE}/${image_name}:${image_vers}"
      --destination "simonlenau/containr:${image_name}_latest"
      --destination "simonlenau/containr:${image_name}_${image_ver}"
      --build-arg "r_version"="${FROM_IMAGE}"
      --build-arg "ubuntu_packages"="${ubuntu_packages}"
      --build-arg "r_packages"="${r_packages}"
      --build-arg "workdir"="/${CI_PROJECT_TITLE}/"
      --build-arg "outdir"="/${CI_PROJECT_TITLE}_output/"